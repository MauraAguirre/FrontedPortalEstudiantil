
@page "/horario/index"
@inject HttpClient httpClient
@inject NavigationManager NavigationManager

<MudText Typo="Typo.h2" Class="ml">Horarios</MudText>

<MudTable Items="@horarios" Hover="true" Bordered="true" Striped="true">
    <ToolBarContent>
        <MudFab Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add" OnClick="goAdd" />
        <MudSpacer />
        <MudTextField @bind-Value="searchText" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Id:</MudTh>
        <MudTh>Grado</MudTh>
        <MudTh>Materia</MudTh>
        <MudTh>Docente</MudTh>
        <MudTh>Dia</MudTh>
        <MudTh>Horario Inicio</MudTh>
        <MudTh>Horario Salida</MudTh>
        <MudTh></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Id">@context.Id</MudTd>
        <MudTd DataLabel="Grado">@context.Grado.Nombre</MudTd>
        <MudTd DataLabel="Materia">@context.Materia.Nombre</MudTd>
        <MudTd DataLabel="Docente">@context.Docente.Nombre</MudTd>
        <MudTd DataLabel="Dia">@context.Dia</MudTd>
        <MudTd DataLabel="HorarioInicio">@context.HorarioInicio</MudTd>
        <MudTd DataLabel="HorarioSalida">@context.HorarioSalida</MudTd>
        <MudTd>
            <MudButton Link="@($"/horario/editar/{context.Id}")" Size="Size.Small" Variant="Variant.Outlined" Color="Color.Tertiary"
                       Class="text-center">Editar</MudButton>
            <MudButton Link="@($"/horario/eliminar/{context.Id}")" Size="Size.Small" Variant="Variant.Outlined" Color="Color.Warning"
                       Class="text-center">Eliminar</MudButton>
        </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>

@code {
    private IEnumerable<Horario> horarios = new List<Horario>();
    private string searchText = "";
    private Horario horario = new Horario();

    protected override async Task OnInitializedAsync()
    {
        await getAll();
    }

    private async Task getAll()
    {
        var httpResponse = await httpClient.PostAsJsonAsync("horario/buscar", horario);
        string respString = await httpResponse.Content.ReadAsStringAsync();
        horarios = JsonSerializer.Deserialize<IEnumerable<Horario>>(respString, new JsonSerializerOptions { PropertyNameCaseInsensitive = true });
    }

    private void goAdd()
    {
        NavigationManager.NavigateTo("horario/agregar");
    }
}