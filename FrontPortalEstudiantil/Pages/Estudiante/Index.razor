@page "/estudiante/index"
@inject HttpClient httpClient
@inject NavigationManager NavigationManager

<MudText Typo="Typo.h2" Class="ml">Estudiantes</MudText>

<MudTable Items="@estudiantes" Hover="true" Breakpoint="Breakpoint.Sm">
    <ToolBarContent>
        <MudFab Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add" OnClick="goAdd" />
        <MudSpacer />
        <MudTextField @bind-Value="searchText" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Nombre:</MudTh>
        <MudTh>Apellido:</MudTh>
        <MudTh>Codigo:</MudTh>
        <MudTh>Grado:</MudTh>
        <MudTh>Turno:</MudTh>
        <MudTh>Encargado:</MudTh>
        <MudTh>Dui Encargado:</MudTh>
        <MudTh>Correo:</MudTh>
        <MudTh>Direccion:</MudTh>
        <MudTh>Telefono:</MudTh>
        <MudTh></MudTh>
    </HeaderContent>
    <RowTemplate Context="item">
        <MudTd>@item.Nombre</MudTd>
        <MudTd>@item.Apellido</MudTd>
        <MudTd>@item.CodigoEstudiante</MudTd>
        <MudTd>@item.GradoId</MudTd>
        <MudTd>@item.TurnoId</MudTd>
        <MudTd>@item.Encargado</MudTd>
        <MudTd>@item.EncargadoDUI</MudTd>
        <MudTd>@item.Correo</MudTd>
        <MudTd>@item.Direccion</MudTd>
        <MudTd>@item.Telefono</MudTd>
        <MudButton Link="@($"/estudiante/editar/{estudiante.Id}")" Variant="Variant.Outlined" Color="Color.Tertiary">Editar</MudButton>
        <MudButton Link="@($"/estudiante/eliminar/{estudiante.Id}")" Variant="Variant.Outlined" Color="Color.Warning">Eliminar</MudButton>
    </RowTemplate>

    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>

@code {
    private IEnumerable<Estudiante> estudiantes = new List<Estudiante>();
    private string searchText = "";
    private Estudiante estudiante = new Estudiante();

    protected override async Task OnInitializedAsync()
    {
        await getAll();
    }

    private async Task getAll()
    {
        var httpResponse = await httpClient.PostAsJsonAsync("estudiante/buscar", estudiante);
        string respString = await httpResponse.Content.ReadAsStringAsync();
        estudiantes = JsonSerializer.Deserialize<IEnumerable<Estudiante>>(respString, new JsonSerializerOptions { PropertyNameCaseInsensitive = true });
    }

    private void goAdd()
    {
        NavigationManager.NavigateTo("estudiante/agregar");
    }
}